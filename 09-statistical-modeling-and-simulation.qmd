---
execute:
  freeze: auto  # re-render only when source changes
  warning: false
  message: false
editor: source
---

# Linear Regression

```{r}
#| include: false
bytes <- file.size("09-statistical-modeling-and-simulation.qmd")
words <- bytes/10
minutes <- words/200
```

```{r setup, include = FALSE}
library(quarto)
library(fontawesome)
library(ggplot2)
fa_html_dependency()
library(knitr)
library(kableExtra)
library(tidyverse)
# htmltools::tagList(rmarkdown::html_dependency_font_awesome())
```

`r fa("book-open")` Reading: `r ceiling(minutes)` minute(s) at 200 WPM

`r fa("video")` Videos: 31 minutes

## Objectives {#ch9-objectives -}

- Fit a simple linear regression model in R
- Pull out relevant model information using the `broom` package

This chapter is heavily from Dr. Theobold's course-page material.


## Simple Linear Regression

You now have the skills to import, wrangle, and visualize data. All of these tools help us prepare our data for statistical modeling. While we have sprinkled some formal statistical analyses throughout the course, in this section we will be formally reviewing Linear Regression. First let's review simple linear regression. Linear regression models the linear relationship between two quantitative variables.

::: column-margin
{{< video https://www.youtube.com/embed/1IMpg1ukMpY >}} 

<br>

{{< video https://www.youtube.com/embed/LD3OSSVxKMU >}} 

:::

::: go-read
#### Review of Simple Linear Regression and Conditions {-}
[Recommended Reading -- *Modern Dive* : Basic Regression](https://moderndive.com/5-regression.html)

Handy function shown in the reading! `skim` from the `skimr` package.
:::

## Linear Regression in R

To demonstrate linear regression in R, we will be working with the `penguins` data set.

```{r}
library(palmerpenguins)
data(penguins)
head(penguins) |> 
  kable()
```

When conducting linear regression with tools in R, we often want to **visualize the relationship** between the two quantitative variables of interest with a scatterplot. We can then use either `geom_smooth(method = "lm")` (or equivalently `stat_smooth(method = "lm")` to add a line of best fit ("regression line") based on the ordinary least squares (OLS) equation to our scatter plot. The regression line is shown in a default blue line with the standard error uncertainty displayed in a gray transparent band (use `se = FALSE` to hide the standard error uncertainty band). These visual aesthetics can be changed just as any other plot aesthetics.

```{r}
#| message: false
#| warning: false
penguins |>
  ggplot(aes(x = bill_depth_mm, 
             y = bill_length_mm
             )
         ) +
  geom_point() +
  geom_smooth(method = "lm") + 
  labs(x = "Bill Depth (mm)",
       subtitle = "Bill Length (mm)",
       title = "Relationship between penguin bill length and depth"
       ) +
  theme(axis.title.y = element_blank())
```

::: watchout
Be careful of "overplotting" and use `geom_jitter()` instead of `geom_point()` if your data set is dense. This is strictly a data visualization tool and will not alter the original values.
:::

In simple linear regression, we can define the linear relationship with a mathematical equation given by:

$$y = a + b\cdot x$$

::: column-margin
::: note
Remember $y = m\cdot x+b$ from eighth grade?!
:::
:::

where

+ $y$ are the values of the response variable,
+ $x$ are the values of the explanatory/predictor variable,
+ $a$ is the $y$-intercept (**average** value of $y$ when $x = 0$), and
+ $b$ is the slope coefficient (for every 1 unit increase in $x$, the **average** of $y$ increases by b)

::: column-margin
::: note
Remember "rise over run"!
:::
:::

In statistics, we use slightly different notation to denote this relationship with the estimated linear regression equation:

$$\hat y = b_0 + b_1\cdot x.$$

Note that the "hat" symbol above our response variable indicates this is an "estimated" value (or our best guess).

We can **"fit" the linear regression** equation with the `lm` function in R. The `formula` argument is denoted as `y ~ x` where the left hand side (LHS) is our response variable and the right hand side (RHS) contains our explanatory/predictor variable(s). We indicate the data set with the `data` argument and therefore use the variable names (as opposed to vectors) when defining our formula. We name (`my_model)` and save our fitted model just as we would any other R object.

```{r}
my_model <- lm(bill_length_mm ~ bill_depth_mm, 
               data = penguins
               )
```

Now that we have fit our linear regression, we might be wondering how we actually *get* the information out of our model. What are the y-intercept and slope coefficient estimates? What is my residual? How good was the fit? The code options below help us obtain this information.

::: panel-tabset
#### Raw Coefficients
This is what is output when you just call the name of the linear model object you created (`my_model`). Notice, the output doesn't give you much information and it looks kind of bad.

```{r}
my_model
```

#### Model Summary
This is what is output when you use the `summary()` function on a linear model object. Notice, the output gives you a lot of information, some of which is really not that useful. And, the output is quite messy!

```{r}
summary(my_model)
```

#### Tidy Model Summary

The `tidy()` function from the {broom} package takes a linear model object and puts the "important" information into a tidy tibble output.

Ah! Just right!

```{r}
library(broom)
tidy(my_model) |> 
  kable()
```

If you are sad that you no longer have the statistics about the model fit (e.g., R-squared, adjusted R-squared, $\sigma$), you can use the `glance()` function from the broom package to grab those!

```{r}
broom::glance(my_model) |> 
  kable()
```
:::



<!-- ::: check-in -->
<!-- ### Check-in 9.2: Linear Regression {#checkin9-2 -} -->

<!-- **1. True or False -- If you switch the order of `bill_length_mm` and `bill_depth_mm` in the `lm()` formula nothing happens.** -->

<!-- **2. What _object type_ was returned by `summary()`?** -->

<!-- **3. What _object type_ was returned by `tidy()`?** -->

<!-- **4. What is the equation for the estimated regression line for the relationship between bill length and depth (given above)?** -->

<!-- **5. Penguin Mopsy has a bill that is 5mm deeper than Penguin Gidget. What will be the difference between their bill lengths?** -->

<!-- ::: -->

<!-- ::: tryitout -->
<!-- ## PA 9.1: Instrument Con {-} -->

<!-- You will be simulating data from statistical distributions to determine whether Professor Hill's instruments are genuine or not. -->

<!-- Visit [PA 9.1 Instrument Con](https://earobinson95.github.io/stat331-calpoly/practice-activities/PA9.1-instrument-con.html) for instructions. -->

<!-- ::: -->

<!-- ::: tryitout -->
<!-- ## PA 9.2: Mystery Animal {-} -->

<!-- You will be fitting a linear regression model to a data set that contains the weights of a particular animal before and after a year of eating only roasted duck. Plotting the residuals will result in an image of a particular mystery animal. -->

<!-- Visit [PA 9.2 Mystery Animal](https://earobinson95.github.io/stat331-calpoly/practice-activities/PA9.2-mystery-animal.html) for instructions. -->
<!-- ::: -->

<br>

### References {-}
